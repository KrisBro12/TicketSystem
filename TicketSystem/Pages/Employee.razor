@page "/Employee"
@using TicketSystem.Services
@using TicketSystem.Data.Entity
@inject IEmployeeService EmployeeService
@inject IDepartmentService DepartmentService

<PageTitle>Employee Table</PageTitle>

<div class="chat-container">
    <div class="chat-bubble">

        <h1>Employee Table</h1>

        <!-- Print out the table -->
        @if (employees == null)
        {
            <p>Loading...</p>
        }
        else
        {
            <table class="table">
                <thead>
                    <tr>
                        <th></th>
                        <th>Name</th>
                        <th>Last Name</th>
                        <th>Department</th>
                        <th>Skills</th>
                        <th></th>
                    </tr>
                </thead>
                <tbody>
                    @foreach (var employee in employees)
                    {
                        <tr>
                            <td><button @onclick="(()=> SetUpdateEmployee(employee.Id))">Edit</button></td>
                            <td>@employee.name</td>
                            <td>@employee.lastname</td>
                            <td>@employee.department.name</td>
                            <td>@employee.skills</td>
                            <td><button @onclick="(()=> DeleteEmployee(employee.Id))">❌</button></td>

                        </tr>
                    }
                </tbody>
            </table>
        }

        <!-- Add Form -->
        <div class="mb-3">
            <h5>Add New Employee</h5>
            <div class="form-group">
                <label for="newEmployeeName">Name:</label>
                <input type="text" class="form-control" id="newEmployeeName" @bind="newEmployeeName" />
            </div>
            <div class="form-group">
                <label for="newEmployeeLastName">Last Name:</label>
                <input type="text" class="form-control" id="newEmployeeLastName" @bind="newEmployeeLastName" />
            </div>
            <div class="form-group">
                <label for="newEmployeeDepartment">Department:</label>
                <select class="form-control" id="newEmployeeDepartment" @bind="newEmployeeDepartment">
                    @foreach (var department in departments)
                    {
                        <option value="@department.Id">@department.name</option>
                    }
                </select>
            </div>
            <div class="form-group">
                <label for="newEmployeeSkills">Skills:</label>
                <input type="text" class="form-control" id="newEmployeeSkills" @bind="newEmployeeSkills" />
            </div>
            <button class="btn btn-primary" @onclick="AddNewEmployee">Add Employee</button>
        </div>

        <!-- Update Form -->
        <div class="mb-3">
            <h5>Update Employee</h5>
           
            <div class="form-group">
                <label for="updateEmployeeName">New Name:</label>
                <input type="text" class="form-control" id="updateEmployeeName" @bind="tempEmployee.name" />
            </div>
            <div class="form-group">
                <label for="updateEmployeeLastName">New Last Name:</label>
                <input type="text" class="form-control" id="updateEmployeeLastName" @bind="tempEmployee.lastname" />
            </div>
            <div class="form-group">
                <label for="updateEmployeeDepartment">New Department:</label>
                <select class="form-control" id="updateEmployeeDepartment" @bind="tempEmployee.departmentId">
                    @foreach (var department in departments)
                    {
                        <option value="@department.Id">@department.name</option>
                    }
                </select>
            </div>
            <div class="form-group">
                <label for="updateEmployeeSkills">New Skills:</label>
                <input type="text" class="form-control" id="updateEmployeeSkills" @bind="tempEmployee.skills" />
            </div>
            <button class="btn btn-warning" @onclick="UpdateEmployee">Update Employee</button>
        </div>
    </div>
</div>


<style>
    body {
        background-color: #222;
        margin: 0;
        padding: 0;
    }

    .chat-container {
        max-width: 800px;
        margin: 20px auto;
        padding: 20px;
        background-color: #f5f5f5;
        border-radius: 10px;
        box-shadow: 0 0 10px rgba(0, 0, 0, 0.1);
        border-top: 5px solid #555;
    }

    .chat-bubble {
        font-family: 'Segoe UI', Tahoma, Geneva, Verdana, sans-serif;
        line-height: 1.6;
    }

    .table {
        width: 100%;
        margin-top: 30px;
        border-collapse: collapse;
        border-spacing: 0;
    }

        .table th, .table td {
            padding: 15px;
            text-align: left;
            border-bottom: 2px solid #999;
        }

        .table th {
            background-color: #007bff;
            color: #fff;
        }

        .table tbody tr:hover {
            background-color: #f5f5f5;
        }

    .mb-3 {
        margin-bottom: 30px;
        border-top: 2px solid #ddd;
        padding-top: 20px;
    }

    .form-group {
        margin-bottom: 20px;
    }

    label {
        display: block;
        font-weight: bold;
        margin-bottom: 10px;
    }

    .input {
        width: 100%;
        padding: 12px;
        box-sizing: border-box;
        border: 2px solid #ccc;
        border-radius: 8px;
        font-size: 16px;
    }

    .btn {
        display: inline-block;
        padding: 12px 24px;
        font-size: 16px;
        text-align: center;
        text-decoration: none;
        cursor: pointer;
        border-radius: 8px;
    }

    .btn-primary {
        background-color: #007bff;
        color: #fff;
    }

    .btn-warning {
        background-color: #ffc107;
        color: #fff;
    }

    .btn-danger {
        background-color: #dc3545;
        color: #fff;
    }

    .btn:hover {
        opacity: 0.9;
    }</style>

@code {

    List<Data.Entity.Employee> employees;
    List<Data.Entity.Department> departments;
    Data.Entity.Employee tempEmployee;
    string newEmployeeName;
    string newEmployeeLastName;
    int newEmployeeDepartment;
    string newEmployeeSkills;

    string updateEmployeeId;
    string updateEmployeeName;
    string updateEmployeeLastName;
    int updateEmployeeDepartment;
    string updateEmployeeSkills;

    string deleteEmployeeId;

    protected override void OnInitialized()
    {
        tempEmployee = new Data.Entity.Employee();
        employees = EmployeeService.GetAllEmployees();
        departments = DepartmentService.GetAllDepartments();
    }

    private void SetUpdateEmployee(int id)
    {
        tempEmployee = EmployeeService.GetEmployeeById(id);
    }
    private void AddNewEmployee()
    {
        var newEmployee = new TicketSystem.Data.Entity.Employee
            {
                name = newEmployeeName,
                lastname = newEmployeeLastName,
                departmentId = newEmployeeDepartment,
                skills = newEmployeeSkills
            };

        EmployeeService.AddEmployee(newEmployee);
        employees = EmployeeService.GetAllEmployees();

        newEmployeeName = string.Empty;
        newEmployeeLastName = string.Empty;
        newEmployeeDepartment = 0;
        newEmployeeSkills = string.Empty;
    }

    private void UpdateEmployee()
    {
        EmployeeService.UpdateEmployee(tempEmployee);
        employees = EmployeeService.GetAllEmployees();
        tempEmployee = new Data.Entity.Employee();
    }

    private void DeleteEmployee(int id)
    {
        EmployeeService.DeleteEmployee(id);

        employees = EmployeeService.GetAllEmployees();

        deleteEmployeeId = string.Empty;
    }
}
